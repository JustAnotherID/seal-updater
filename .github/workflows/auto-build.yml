name: Auto Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        goos: [ linux ]
        goarch: [ amd64, arm64 ]
        rustarch: [ x86_64, aarch64 ]
      fail-fast: true

    steps:
    - uses: actions/checkout@v3
    - name: Get Rustup Nightly
      run : rustup toolchain add nightly-${{ matrix.rustarch }}-unknown-linux-gnu
    - name: Add Nightly
      run : rustup component add rust-src --toolchain nightly
    - name: Build
      run: RUSTFLAGS="-Zlocation-detail=none" cargo +nightly build -Z build-std=std,panic_abort --target ${{ matrix.rustarch }}-unknown-linux-gnu --release
    - name: Run tests
      run: cargo test --verbose

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: seal-tool-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./target/${{ matrix.rustarch }}-unknown-linux-gnu/release/seal-updater

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        goos: [ darwin ]
        goarch: [ amd64, arm64 ]
        rustarch: [ x86_64, aarch64 ]
      fail-fast: true

    steps:
    - uses: actions/checkout@v3
    - name: Get Rustup Nightly
      run: rustup toolchain add nightly-${{ matrix.rustarch }}-apple-darwin
    - name: Add Nightly
      run : rustup component add rust-src --toolchain nightly
    - name: Build
      run: RUSTFLAGS="-Zlocation-detail=none" cargo +nightly build -Z build-std=std,panic_abort --target ${{ matrix.rustarch }}-apple-darwin --release
    - name: Run tests
      run: cargo test --verbose

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: seal-tool-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./target/${{ matrix.rustarch }}-apple-darwin/release/seal-updater

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        goos: [ windows ]
        goarch: [ amd64, i386 ]
        rustarch: [ x86_64, i686 ]
      fail-fast: true

    steps:
    - uses: actions/checkout@v3
    - name: Get Toolchain
      run: rustup target add ${{ matrix.rustarch }}-pc-windows-msvc
    - name: Build
      run: cargo build --target ${{ matrix.rustarch }}-px-windows-msvc --verbose --release
    - name: Run tests
      run: cargo test --verbose

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: seal-tool-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./target/${{ matrix.rustarch }}-px-windows-msvc/release/seal-updater.exe
